/////////////////////////

//	dev()
//	allows you to set an arbitrary max-width for your page for responsive testing
//	ex: @include dev(320px);

@mixin dev($width){
	html { background-color: #eee; }
	body {
	    max-width: #{$width}px;
	}
}

/////////////////////////

//	respond()
//	add a min-width media query at the nth value in $respond-breakpoints
// 	ex:
// 	h1 {
// 		font-size: $size-large;
// 		@include respond(3) {
// 			font-size: $size-1xlarge;
// 		} 
//	}

@mixin respond($n) {
	@media only screen and (min-width: nth($respond-breakpoints, $n) + 1) {
		@content;
	}
}

//	these old respond()s are here becouse the new one seems to be broken with the django-pipeline compiler

$width-xmobile-respond: $width-mobile; 	// 376px;
$width-tablet-respond: $width-xmobile; 		// 640px;
$width-desktop-respond: $width-tablet; 	// 1048px;
$width-wide-respond: $width-desktop; 		// 1168px;
$width-max-respond: $width-wide; 		// 1168px;


@mixin respond-mobile {
	@media only screen and (max-width: 767px) {
		@content;
	}
}

@mixin respond-xmobile {
	@media only screen and (min-width: $width-xmobile-respond) {
		@content;
	}
}

@mixin respond-tablet {
	@media only screen and (min-width: $width-tablet) {
		@content;
	}
}

@mixin respond-desktop {
	@media only screen and (min-width: $width-desktop) {
		@content;
	}
}

@mixin respond-wide {
	@media only screen and (min-width: $width-wide) {
		@content;
	}
}

@mixin respond-max {
	@media only screen and (min-width: $width-max) {
		@content;
	}
}

// mixins for links

@mixin link-none($linkcolor){
	color: $linkcolor;
	text-decoration: none;
	&:link { color: $linkcolor; }
	&:visited { color: $linkcolor}
	&:hover { color: $linkcolor; }
	&:active { color: $linkcolor; }
}

@mixin link-highlight($linkcolor, $highlightcolor){
	color: $linkcolor;
	text-decoration: none;
	&:link { color: $linkcolor; }
	&:visited { color: $linkcolor}
	&:hover { color: $highlightcolor; }
	&:active { color: $linkcolor; }
}

@mixin link-underline($linkcolor, $highlightcolor){
	color: $linkcolor;
	text-decoration: underline;
	&:link { color: $linkcolor; }
	&:visited { color: $linkcolor}
	&:hover { color: $highlightcolor; }
	&:active { color: $linkcolor; }
}

@mixin link-underline-on-hover($linkcolor, $highlightcolor){
	color: $linkcolor;
	text-decoration: none;
	&:link { color: $linkcolor; }
	&:visited { color: $linkcolor}
	&:hover { 
		color: $linkcolor; 
		text-decoration: underline;
	}
	&:active { color: $highlightcolor; }
}

@mixin fill-screen {
	position: fixed;
    border-radius: 0;
    top: 0px;
    bottom: 0px;
    left: 0px;
    right: 0px;
}

@mixin style-card($border-color) {
	-moz-box-shadow:	0 2px 4px rgba(0, 0, 0, 0.175);	
	-webkit-box-shadow:	0 2px 4px rgba(0, 0, 0, 0.175);	
	box-shadow: 			0 2px 4px rgba(0, 0, 0, 0.175);	
	border: 1px solid $border-color;
	border-radius: 2px;
	background-clip: padding-box;
}

@mixin hide-text {
    text-indent: -10000px;
    overflow: hidden;
}

@mixin fill-screen {
	position: fixed;
	width: 100%;
    height: 100%;
    border-radius: 0;
    top: 0px;
    bottom: 0px;
    left: 0px;
    right: 0px;
}

@mixin link-dropdown-widths($dropdownTotal, $dropdownLabel) {
	.label-affil {
		width: $dropdownLabel;
	}
	.dropdown-affil,
	.dropdown.open .selector-menu {
    	width: $dropdownTotal - $dropdownLabel;
	}
}

@mixin normalize {
	// normalize
	//	normalize.css v3.0.2 | MIT License | git.io/normalize
	
	// Not imported because of an ordering bug in django-pipeline (imports at the end of the css instead of where the import occurs)
	
	html {
	  font-family: sans-serif; /* 1 */
	  -ms-text-size-adjust: 100%; /* 2 */
	  -webkit-text-size-adjust: 100%; /* 2 */
	}
	
	body {
	  margin: 0;
	}
	
	article,
	aside,
	details,
	figcaption,
	figure,
	footer,
	header,
	hgroup,
	main,
	menu,
	nav,
	section,
	summary {
	  display: block;
	}
	
	audio,
	canvas,
	progress,
	video {
	  display: inline-block; /* 1 */
	  vertical-align: baseline; /* 2 */
	}
	
	audio:not([controls]) {
	  display: none;
	  height: 0;
	}
	
	[hidden],
	template {
	  display: none;
	}
	
	a {
	  background-color: transparent;
	}
	
	a:active,
	a:hover {
	  outline: 0;
	}
	
	abbr[title] {
	  border-bottom: 1px dotted;
	}
	
	b,
	strong {
	  font-weight: bold;
	}
	
	dfn {
	  font-style: italic;
	}
	
	h1 {
	  font-size: 2em;
	  margin: 0.67em 0;
	}
	
	mark {
	  background: #ff0;
	  color: #000;
	}
	
	small {
	  font-size: 80%;
	}
	
	sub,
	sup {
	  font-size: 75%;
	  line-height: 0;
	  position: relative;
	  vertical-align: baseline;
	}
	
	sup {
	  top: -0.5em;
	}
	
	sub {
	  bottom: -0.25em;
	}
	
	img {
	  border: 0;
	}
	
	svg:not(:root) {
	  overflow: hidden;
	}
	
	figure {
	  margin: 1em 40px;
	}
	
	hr {
	  -moz-box-sizing: content-box;
	  box-sizing: content-box;
	  height: 0;
	}
	
	pre {
	  overflow: auto;
	}
	
	code,
	kbd,
	pre,
	samp {
	  font-family: monospace, monospace;
	  font-size: 1em;
	}
	
	button,
	input,
	optgroup,
	select,
	textarea {
	  color: inherit; /* 1 */
	  font: inherit; /* 2 */
	  margin: 0; /* 3 */
	}
	
	button {
	  overflow: visible;
	}
	
	button,
	select {
	  text-transform: none;
	}
	
	button,
	html input[type="button"], /* 1 */
	input[type="reset"],
	input[type="submit"] {
	  -webkit-appearance: button; /* 2 */
	  cursor: pointer; /* 3 */
	}
	
	button[disabled],
	html input[disabled] {
	  cursor: default;
	}
	
	button::-moz-focus-inner,
	input::-moz-focus-inner {
	  border: 0;
	  padding: 0;
	}
	
	input {
	  line-height: normal;
	}
	
	input[type="checkbox"],
	input[type="radio"] {
	  box-sizing: border-box; /* 1 */
	  padding: 0; /* 2 */
	}
	
	input[type="number"]::-webkit-inner-spin-button,
	input[type="number"]::-webkit-outer-spin-button {
	  height: auto;
	}
	
	input[type="search"] {
	  -webkit-appearance: textfield; /* 1 */
	  -moz-box-sizing: content-box;
	  -webkit-box-sizing: content-box; /* 2 */
	  box-sizing: content-box;
	}
	
	input[type="search"]::-webkit-search-cancel-button,
	input[type="search"]::-webkit-search-decoration {
	  -webkit-appearance: none;
	}
	
	fieldset {
	  border: 1px solid #c0c0c0;
	  margin: 0 2px;
	  padding: 0.35em 0.625em 0.75em;
	}
	
	legend {
	  border: 0; /* 1 */
	  padding: 0; /* 2 */
	}
	
	textarea {
	  overflow: auto;
	}
	
	optgroup {
	  font-weight: bold;
	}
	
	table {
	  border-collapse: collapse;
	  border-spacing: 0;
	}
	
	td,
	th {
	  padding: 0;
	}
}

@mixin affix-to-top {
    position: fixed;
    left: 0;
    right: 0;
    top: 0;
    width: auto;
    margin: auto;
    max-width: none;
    z-index: 10000;
}


@mixin ui-chev-down {
    content: '';
    height: 9px;
    width: 18px;
    display: inline-block;
    background-image: url('../img/ui/perma-ui-chev-down.png');
    background-repeat: no-repeat;
    background-size: 102px 9px;
    background-position: -17px * 2;
    top: -1px;
	margin-left: $grid;
}

@mixin style-dropdown-items {
	& > li {
	    list-style: none;
	}
	& > li > a {
	    font-size: 14px;
		font-family: $font-hed-alt;
		padding: $half 12px $half $grid * 3;
		font-size: $size-body;
		text-align: right;
		&:hover, &:focus {
			background-color: $color-hover;
			color: white;
		}
	}
}

@mixin style-dropdown-structure {
	@include style-card(black);
    display: none;
	position: relative;
    float: none;
    width: auto;
	z-index: 1000;
    padding: 5px 0;
    margin: 2px 0 0;
	margin-right: -7px;
    background-color: white;
}